

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;

public class ServeurUDP {
	private DatagramSocket dgSocket;

	ServeurUDP(int pSrv) throws IOException {
		dgSocket = new DatagramSocket(pSrv);
	}

	void go() throws IOException {
		DatagramPacket dgPacket = new DatagramPacket(new byte[300], 300);
		
		int nbr;
		
		while (true) {
			nbr=0;
			String reponse = "";
			dgSocket.receive(dgPacket);
			byte[] tab = dgPacket.getData();
			
			System.out.println("Address : " + dgPacket.getSocketAddress().toString().substring(1));
			System.out.println("Numero reçu : "+getAffichageTabByteToString(tab).charAt(0));
			System.out.println("Message reçu : "+getAffichageTabByteToString(tab).substring(1));
			
			dgPacket.setSocketAddress(dgPacket.getSocketAddress());
			
			String msg = getAffichageTabByteToString(dgPacket.getData());
			try {
				nbr = Integer.valueOf(msg.split(":")[0]);
				msg = msg.split(":")[1];
				String[]tabMsg = msg.split(" ");
				for (int i = 0; i < tabMsg.length; i++) {
					for (int j = 0; j < nbr; j++) {
						reponse += tabMsg[i]+" ";
					}
				}
				
				
			}catch (NumberFormatException e) {
				
			}
			/*if(nbr<0 || nbr >9) {
				reponse = "1Erreur : multiplicateur manquant";
			}else {
				System.out.println(getAffichageTabByteToChar(tab).substring(1));
				String[] msg = getAffichageTabByteToChar(tab).substring(1).split(" ");
				
			}*/

			
	
		
			
			byte[] bufDate = reponse.getBytes();
			dgPacket.setData(bufDate, 0, bufDate.length);
			
			dgSocket.send(dgPacket);
		}
	}
	
	// Affiche un tableau de byte en chaine de caractére
	private String getAffichageTabByteToString(byte[] b) {
		String res = "";
		for (int i = 0; i < b.length; i++) {
			res += (char)b[i];
		}
		return res;
	}

	public static void main(String[] args) throws IOException {
		final int DEFAULT_PORT = 9876;
		new ServeurUDP( args.length == 0 ? DEFAULT_PORT : Integer.parseInt(args[0]) ).go();
	}
}